{% set name = "iminuit" %}
{% set version = "2.30.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 2815bfdeb8e7f78185f316b75e2d4b19d0f6993bdc5ff03352ed37b70a796360

build:
  number: 0
  skip: true  # [py<39]
  script:
    - export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}                  # [unix]
    - set CMAKE_BUILD_PARALLEL_LEVEL=%CPU_COUNT%                      # [win]
    - python -m scikit_build_core.builder.wheel_tag
    - python -c "import packaging.tags; print(*packaging.tags.sys_tags())"
    - exit 1
    - {{ PYTHON }} -m pip install . -vv -Ccmake.verbose=true -Clogging.level=DEBUG

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - cmake >=3.15
    - make  # [unix]
  host:
    - python
    - pip
    - scikit-build-core
    - pybind11
  run:
    - python
    - {{ pin_compatible('numpy') }}
    - typing_extensions  # [py<39]

test:
  source_files:
    - tests
  requires:
    - pytest
    - pip
  imports:
    - iminuit
  commands:
    - python -m pytest tests
    - python -c "import packaging.tags; print(*packaging.tags.sys_tags())"
    - cat $(python -c 'import sysconfig; print(sysconfig.get_paths()["platlib"])')/iminuit-*/WHEEL
    - python -m pip debug --verbose
    - python -m pip check

about:
  home: https://github.com/scikit-hep/iminuit
  license: LGPL-2.0-or-later
  license_family: LGPL
  license_file: LICENSE
  summary: Interactive Minimization Tools based on MINUIT
  description: |
    iminuit is designed from ground up to be fast, interactive and cython
    friendly. iminuit extract function signature very permissively starting
    from checking func_code down to last resort of parsing docstring (or you
    could tell iminuit to stop looking and take your answer). The interface is
    inspired heavily by PyMinuit and the status printout is inspired by ROOT
    Minuit. iminuit is mostly compatible with PyMinuit (with few exceptions).
    Existing PyMinuit code can be ported to iminuit by just changing the
    import statement.
  doc_url: http://iminuit.readthedocs.io
  dev_url: https://github.com/scikit-hep/iminuit

extra:
  recipe-maintainers:
    - mwcraig
    - bsipocz
    - HDembinski
    - chrisburr
    - henryiii
