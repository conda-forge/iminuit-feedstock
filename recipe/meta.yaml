{% set name = "iminuit" %}
{% set version = "2.29.1" %}
{% set build = 1 %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 474d10eb2f924b9320f6f7093e4c149d0a38c124d0419c12a07a3eca942de025

build:
  # Prioritize builds with a higher microarch level.
  # microarch_level 4 not supported yet.
  # c.f. https://github.com/conda-forge/microarch-level-feedstock/issues/5
  number: {{ build }}          # [not (unix and x86_64)]
  number: {{ build + 100 }}    # [unix and x86_64 and microarch_level == 1]
  number: {{ build + 300 }}    # [unix and x86_64 and microarch_level == 3]
  skip: true  # [py<39]
  script:
    - export CMAKE_BUILD_PARALLEL_LEVEL=${CPU_COUNT}                  # [unix]
    - set CMAKE_BUILD_PARALLEL_LEVEL=%CPU_COUNT%                      # [win]
    - {{ PYTHON }} -m pip install . -vv

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - x86_64-microarch-level {{ microarch_level }}  # [unix and x86_64]
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - cmake >=3.15
    - make  # [unix]
  host:
    - python
    - pip
    - scikit-build-core
    - pybind11
  run:
    - python
    - {{ pin_compatible('numpy') }}
    - typing_extensions  # [py<39]

test:
  source_files:
    - tests
  requires:
    - pytest
    - pip
  imports:
    - iminuit
  commands:
    - python -m pytest tests
    - pip check

about:
  home: https://github.com/scikit-hep/iminuit
  license: LGPL-2.0-or-later
  license_family: LGPL
  license_file: LICENSE
  summary: Interactive Minimization Tools based on MINUIT
  description: |
    iminuit is designed from ground up to be fast, interactive and cython
    friendly. iminuit extract function signature very permissively starting
    from checking func_code down to last resort of parsing docstring (or you
    could tell iminuit to stop looking and take your answer). The interface is
    inspired heavily by PyMinuit and the status printout is inspired by ROOT
    Minuit. iminuit is mostly compatible with PyMinuit (with few exceptions).
    Existing PyMinuit code can be ported to iminuit by just changing the
    import statement.
  doc_url: http://iminuit.readthedocs.io
  dev_url: https://github.com/scikit-hep/iminuit

extra:
  recipe-maintainers:
    - mwcraig
    - bsipocz
    - HDembinski
    - chrisburr
    - henryiii
